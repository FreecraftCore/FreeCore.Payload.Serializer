using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore.Serializer.CustomTypes;
namespace FreecraftCore.Serializer.CustomTypes
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class TypeStub
    {
        public override Type SerializableType => typeof(TypeStub);
        public override BaseTypeStub Read(Span<byte> buffer, ref int offset)
        {
            TypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(BaseTypeStub value, Span<byte> buffer, ref int offset)
        {
            TypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="TypeStub"/>
    /// </summary>
    public sealed partial class TypeStub_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<TypeStub_AutoGeneratedTemplateSerializerStrategy, TypeStub>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(TypeStub value, Span<byte> buffer, ref int offset)
        {
            //Type: BaseTypeStub Field: 1 Name: BaseIntField Type: Int32;
            value.BaseIntField = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 1 Name: Hello Type: Int32;
            value.Hello = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 2 Name: TestString Type: String;
            value.TestString = LengthPrefixedStringTypeSerializerStrategy<UTF32StringTypeSerializerStrategy, UTF32StringTerminatorTypeSerializerStrategy, UInt16>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 3 Name: HelloAgain Type: UInt16;
            value.HelloAgain = GenericTypePrimitiveSerializerStrategy<UInt16>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 4 Name: TestStringTwo Type: String;
            value.TestStringTwo = DontTerminateLengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, Int16>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 5 Name: KnownSizeStringTest Type: String;
            value.KnownSizeStringTest = FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_1337>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 6 Name: DefaultStringTest Type: String;
            value.DefaultStringTest = TerminatedStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, UTF16StringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 6 Name: DefaultStringTestNotTerminated Type: String;
            value.DefaultStringTestNotTerminated = UTF16StringTypeSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 8 Name: EnumTestValue Type: TestEnum;
            value.EnumTestValue = GenericPrimitiveEnumTypeSerializerStrategy<TestEnum, UInt64>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 9 Name: LongArrayTestAddedSize Type: Int64[];
            value.LongArrayTestAddedSize = SendSizePrimitiveArrayTypeSerializerStrategy<Int64, Int16>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 10 Name: EnumTestValueSized Type: TestEnum;
            value.EnumTestValueSized = GenericPrimitiveEnumTypeSerializerStrategy<TestEnum, Byte>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 11 Name: ComplexTypeTest Type: NestedTypeStub;
            value.ComplexTypeTest = NestedTypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 12 Name: ComplexArrayTest Type: NestedTypeStub[];
            value.ComplexArrayTest = FixedSizeComplexArrayTypeSerializerStrategy<NestedTypeStub_AutoGeneratedTemplateSerializerStrategy, NestedTypeStub, StaticTypedNumeric_Int32_1776>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 13 Name: OptionalValue Type: Int32;
            if (value.OptionalBoolCheck)value.OptionalValue = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 14 Name: TestCustomSerializerInt Type: Int32;
            value.TestCustomSerializerInt = TestCustomSerializer.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 15 Name: EnumStringTestValue Type: TestEnum;
            value.EnumStringTestValue = InternalEnumExtensions.Parse<TestEnum>(TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset), true);
            //Type: TypeStub Field: 16 Name: NestedPolymorphicTypeValue Type: BaseTypeStub;
            value.NestedPolymorphicTypeValue = BaseTypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 17 Name: BigEndianIntTestValue Type: Int32;
            value.BigEndianIntTestValue = BigEndianGenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 18 Name: EnumStringTestValueReversed Type: TestEnum;
            value.EnumStringTestValueReversed = InternalEnumExtensions.Parse<TestEnum>(TerminatedStringTypeSerializerStrategy<ReversedASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset), true);
            //Type: TypeStub Field: 97 Name: LongArrayTest Type: Int64[];
            value.LongArrayTest = SendSizePrimitiveArrayTypeSerializerStrategy<Int64, Int16>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 98 Name: KnownSizeArrayTest Type: UInt16[];
            value.KnownSizeArrayTest = FixedSizePrimitiveArrayTypeSerializerStrategy<UInt16, StaticTypedNumeric_Int32_1337>.Instance.Read(buffer, ref offset);
            //Type: TypeStub Field: 99 Name: FinalArrayMemberWriteToEnd Type: Int32[];
            value.FinalArrayMemberWriteToEnd = PrimitiveArrayTypeSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(TypeStub value, Span<byte> buffer, ref int offset)
        {
            //Type: BaseTypeStub Field: 1 Name: BaseIntField Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.BaseIntField, buffer, ref offset);
            //Type: TypeStub Field: 1 Name: Hello Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.Hello, buffer, ref offset);
            //Type: TypeStub Field: 2 Name: TestString Type: String;
            LengthPrefixedStringTypeSerializerStrategy<UTF32StringTypeSerializerStrategy, UTF32StringTerminatorTypeSerializerStrategy, UInt16>.Instance.Write(value.TestString, buffer, ref offset);
            //Type: TypeStub Field: 3 Name: HelloAgain Type: UInt16;
            GenericTypePrimitiveSerializerStrategy<UInt16>.Instance.Write(value.HelloAgain, buffer, ref offset);
            //Type: TypeStub Field: 4 Name: TestStringTwo Type: String;
            DontTerminateLengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, Int16>.Instance.Write(value.TestStringTwo, buffer, ref offset);
            //Type: TypeStub Field: 5 Name: KnownSizeStringTest Type: String;
            FixedSizeStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, StaticTypedNumeric_Int32_1337>.Instance.Write(value.KnownSizeStringTest, buffer, ref offset);
            //Type: TypeStub Field: 6 Name: DefaultStringTest Type: String;
            TerminatedStringTypeSerializerStrategy<UTF16StringTypeSerializerStrategy, UTF16StringTerminatorTypeSerializerStrategy>.Instance.Write(value.DefaultStringTest, buffer, ref offset);
            //Type: TypeStub Field: 6 Name: DefaultStringTestNotTerminated Type: String;
            UTF16StringTypeSerializerStrategy.Instance.Write(value.DefaultStringTestNotTerminated, buffer, ref offset);
            //Type: TypeStub Field: 8 Name: EnumTestValue Type: TestEnum;
            GenericPrimitiveEnumTypeSerializerStrategy<TestEnum, UInt64>.Instance.Write(value.EnumTestValue, buffer, ref offset);
            //Type: TypeStub Field: 9 Name: LongArrayTestAddedSize Type: Int64[];
            SendSizePrimitiveArrayTypeSerializerStrategy<Int64, Int16>.Instance.Write(value.LongArrayTestAddedSize, buffer, ref offset);
            //Type: TypeStub Field: 10 Name: EnumTestValueSized Type: TestEnum;
            GenericPrimitiveEnumTypeSerializerStrategy<TestEnum, Byte>.Instance.Write(value.EnumTestValueSized, buffer, ref offset);
            //Type: TypeStub Field: 11 Name: ComplexTypeTest Type: NestedTypeStub;
            NestedTypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.ComplexTypeTest, buffer, ref offset);
            //Type: TypeStub Field: 12 Name: ComplexArrayTest Type: NestedTypeStub[];
            FixedSizeComplexArrayTypeSerializerStrategy<NestedTypeStub_AutoGeneratedTemplateSerializerStrategy, NestedTypeStub, StaticTypedNumeric_Int32_1776>.Instance.Write(value.ComplexArrayTest, buffer, ref offset);
            //Type: TypeStub Field: 13 Name: OptionalValue Type: Int32;
            if (value.OptionalBoolCheck)GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.OptionalValue, buffer, ref offset);
            //Type: TypeStub Field: 14 Name: TestCustomSerializerInt Type: Int32;
            TestCustomSerializer.Instance.Write(value.TestCustomSerializerInt, buffer, ref offset);
            //Type: TypeStub Field: 15 Name: EnumStringTestValue Type: TestEnum;
            TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.EnumStringTestValue, buffer, ref offset);
            //Type: TypeStub Field: 16 Name: NestedPolymorphicTypeValue Type: BaseTypeStub;
            BaseTypeStub_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.NestedPolymorphicTypeValue, buffer, ref offset);
            //Type: TypeStub Field: 17 Name: BigEndianIntTestValue Type: Int32;
            BigEndianGenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.BigEndianIntTestValue, buffer, ref offset);
            //Type: TypeStub Field: 18 Name: EnumStringTestValueReversed Type: TestEnum;
            TerminatedStringTypeSerializerStrategy<ReversedASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.EnumStringTestValueReversed, buffer, ref offset);
            //Type: TypeStub Field: 97 Name: LongArrayTest Type: Int64[];
            SendSizePrimitiveArrayTypeSerializerStrategy<Int64, Int16>.Instance.Write(value.LongArrayTest, buffer, ref offset);
            //Type: TypeStub Field: 98 Name: KnownSizeArrayTest Type: UInt16[];
            FixedSizePrimitiveArrayTypeSerializerStrategy<UInt16, StaticTypedNumeric_Int32_1337>.Instance.Write(value.KnownSizeArrayTest, buffer, ref offset);
            //Type: TypeStub Field: 99 Name: FinalArrayMemberWriteToEnd Type: Int32[];
            PrimitiveArrayTypeSerializerStrategy<Int32>.Instance.Write(value.FinalArrayMemberWriteToEnd, buffer, ref offset);
        }
        private sealed class StaticTypedNumeric_Int32_1337 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 1337; }
        private sealed class StaticTypedNumeric_Int32_69 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 69; }
        private sealed class StaticTypedNumeric_Int32_1776 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 1776; }
    }
}
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="TypeStub"/>
    /// </summary>
    public sealed partial class TypeStub_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<TypeStub_AutoGeneratedTemplateSerializerStrategy, TypeStub>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="source">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        partial void GeneratedRead(TypeStub value, Span<byte> source, ref int offset)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="destination">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        partial void GeneratedWrite(TypeStub value, Span<byte> destination, ref int offset)
        {
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.Hello, destination, ref offset);
            LengthPrefixedStringTypeSerializerStrategy<UTF32StringTypeSerializerStrategy, UTF32StringTerminatorTypeSerializerStrategy, UInt16>.Instance.Write(value.TestString, destination, ref offset);
            GenericTypePrimitiveSerializerStrategy<UInt16>.Instance.Write(value.HelloAgain, destination, ref offset);
            DontTerminateLengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, Int16>.Instance.Write(value.TestStringTwo, destination, ref offset);
            KnownSizeStringSerializerHelper.Write(value.KnownSizeStringTest, destination, ref offset, 1337, EncodingType.UTF16, false);
            GenericPrimitiveEnumTypeSerializerStrategy<TestEnum, UInt64>.Instance.Write(value.EnumTestValue, destination, ref offset);
            PrimitiveArraySerializerHelper.Write(value.LongArrayTestAddedSize, destination, ref offset, (Int16)(value.LongArrayTestAddedSize.Length - 3), true);
        }
    }
}